{"version":3,"sources":["style/Styles.js","components/CardComponents/MovieCard.jsx","redux/favoriteReducers.js","components/CardComponents/CardArea.jsx","components/Newest/Newest.jsx","redux/newestReducers.js","api/api.js","components/Newest/NewestContainer.jsx","components/TopRated/TopRated.jsx","redux/topRatedReducers.js","components/TopRated/TopRatedContainer.jsx","redux/filmPageReducers.js","components/FilmPage/FilmPage.jsx","components/FilmPage/FilmPageContainer.jsx","redux/searchBarReducers.js","components/Navbar/Searchbar.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/Popular/Popular.jsx","redux/popularReducers.js","components/Popular/PopularContainer.jsx","components/Favorite/Favorite.jsx","components/Favorite/FavoriteContainer.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["StyledCard","styled","Card","StyledLinkLight","Link","StyledLinkDark","useStyles","makeStyles","typographyName","fontSize","lineHeight","typographyScore","typographyDate","starIcon","marginRight","cardContent","padding","minHeight","marginTop","vote_average","paddingTop","paddingBottom","bookmark","marginLeft","cursor","bookmarkRed","color","cardActionArea","MovieCard","props","classes","useState","isFavorite","count","setCount","toggle","data","removeFavourites","toFavourites","CardActionArea","className","to","id","CardMedia","cardMedia","component","alt","original_title","title","src","poster_path","CardActions","Grid","container","direction","Typography","variant","Tooltip","onClick","CardContent","gutterBottom","display","length","slice","release_date","checkingLocalStorage","favoriteFilms","Object","keys","localStorage","key","push","JSON","parse","getItem","initialState","favoriteReducers","state","action","type","concat","filmData","filteredFilms","theme","root","flexGrow","justifyContent","connect","favorite","map","filmId","stringify","serializedFilm","setItem","removeItem","pageNumber","style","dataLength","films","next","moreFilms","hasMore","loader","item","xs","justify","spacing","movieCard","filmsData","film","includes","Newest","newFilms","moreNewFilms","pathname","newestReducers","newFilmsData","results","page","instance","axios","withCredentials","baseURL","api","usersAPI","get","then","response","query","backdrops","NewestContainer","number","newFilmsAC","this","location","React","Component","compose","newest","withRouter","TopRated","topFilms","moreTopFilms","topRatedReducers","topFilmsData","TopRatedContainer","topFilmsAC","top","filmDetail","castData","crueData","paper","margin","maxWidth","paper2","paperFullSize","fullSizeImg","paperCast","width","height","gridOverview","img","maxHeight","slider","flexWrap","overflow","backgroundColor","palette","background","gridList","transform","primary","light","titleBar","backdrop","zIndex","drawer","tabsBlock","FilmPage","filmGenres","genres","g","name","useTheme","value","setValue","open","setOpen","handleClose","picUrl","setfullSizePic","handleToggle","e","target","Paper","ButtonBase","image","sm","tagline","AppBar","elevation","position","tabs","Tabs","onChange","event","newValue","textColor","Tab","label","a11yProps","tabsBar","axis","index","onChangeIndex","TabPanel","dir","actorsGrid","cast","profile_path","GridList","cols","images","tile","GridListTile","file_path","GridListTileBar","overview","crue","job","runtime","budget","production_countries","Backdrop","children","other","role","hidden","aria-labelledby","Box","p","FilmPageContainer","match","params","newFilmDetalAC","newFilmImagesAC","splice","newCastAC","FilmDetal","FilmImages","FilmCast","searchAC","searchData","inline","list","toolbar","search","borderRadius","shape","fade","common","white","breakpoints","up","searchIcon","pointerEvents","alignItems","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchBar","document","addEventListener","setAnchorEl","clearField","anchorEl","getElementById","requestQuery","getQuery","Boolean","undefined","InputBase","placeholder","input","inputProps","Popper","List","ListItem","ListItemAvatar","Avatar","avatar","ListItemText","secondary","Fragment","Divider","Navbar","Toolbar","Button","NavbarContainer","toLowerCase","searchMovies","setFilmId","dispatch","Popular","popularFilms","morePopularFilms","popularReducers","popularFilmsData","PopularContainer","popularFilmsAC","popular","Favorite","console","log","FavoriteContainer","values","App","basename","process","Container","exact","path","render","window","hostname","reducers","combineReducers","crew","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a6b7de74.chunk.js","sourcesContent":["import styled from \"styled-components\"\r\nimport { Card } from \"@material-ui/core\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const StyledCard = styled(Card)`\r\nheight: 45vh;\r\nwidth: 22vh;\r\n`\r\nexport const StyledLinkLight = styled(Link)`\r\n  text-decoration: none;\r\n  color: #FFFFFF;\r\n`\r\nexport const StyledLinkDark = styled(Link)`\r\n  text-decoration: none;\r\n  color: #2d3436;\r\n`\r\n","import React from 'react';\r\nimport { Typography, CardActionArea, CardActions, CardContent, CardMedia, Grid, Tooltip } from '@material-ui/core';\r\nimport { StyledCard, StyledLinkLight } from '../../style/Styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    typographyName: {\r\n        fontSize: '1.7vh',\r\n        lineHeight: '2.5vh'\r\n    },\r\n    typographyScore: {\r\n        fontSize: '1.8vh',\r\n    },\r\n    typographyDate: {\r\n        fontSize: '1.7vh',\r\n    },\r\n    starIcon: {\r\n        fontSize: '2.4vh',\r\n        marginRight: 5\r\n    },\r\n    cardContent: {\r\n        padding: '0.8vh',\r\n        minHeight: '8vh',\r\n        marginTop: '-0.5vh'\r\n    },\r\n    vote_average: {\r\n        paddingTop: '1vh',\r\n        paddingBottom: 0\r\n    },\r\n    bookmark: {\r\n        marginLeft: 'auto',\r\n        fontSize: '2.7vh',\r\n        cursor: 'pointer'\r\n    },\r\n    bookmarkRed: {\r\n        marginLeft: 'auto',\r\n        color: '#d63031',\r\n        fontSize: '2.7vh',\r\n        cursor: 'pointer'\r\n    },\r\n    cardActionArea: {\r\n        cursor: 'default',\r\n    },\r\n}))\r\n\r\nconst MovieCard = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const releaseDate = () => {\r\n        return props.release_date.slice(0, 4)\r\n    }\r\n\r\n    const originalName = () => {\r\n        if (props.original_title.length > 40) {\r\n            return props.original_title.slice(0, 40) + '...'\r\n        } else {\r\n            return props.original_title\r\n        }\r\n    }\r\n\r\n    const [count, setCount] = useState(props.isFavorite);\r\n\r\n    const toggle = (data) => {\r\n        return count ? () => {\r\n            props.removeFavourites(data)\r\n            setCount(false)\r\n        } : () => {\r\n            props.toFavourites(data)\r\n            setCount(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledCard >\r\n            <CardActionArea className={classes.cardActionArea} >\r\n                <StyledLinkLight to={'/FilmPage/' + props.id}>\r\n                    <CardMedia\r\n                        className={classes.cardMedia}\r\n                        component=\"img\"\r\n                        alt={props.original_title}\r\n                        title={props.original_title}\r\n                        src={\"https://image.tmdb.org/t/p/w220_and_h330_face/\" + props.poster_path}\r\n                    />\r\n                </StyledLinkLight>\r\n                <CardActions className={classes.vote_average} >\r\n                    <Grid container direction=\"row\" >\r\n                        <StarIcon className={classes.starIcon} color=\"action\" />\r\n                        <Typography className={classes.typographyScore} variant=\"body1\" color=\"textSecondary\">\r\n                            {props.vote_average ? props.vote_average : 'No score yet'}\r\n                        </Typography>\r\n                        <Tooltip title={count ? \"Remove from favorites\" : \"Add to favorites\"}>\r\n                            {count ?\r\n                                <BookmarkIcon className={classes.bookmarkRed} onClick={toggle(props.data)} />\r\n                                : <BookmarkBorderIcon color=\"action\" className={classes.bookmark} onClick={toggle(props.data)} />}\r\n                        </Tooltip>\r\n                    </Grid>\r\n                </CardActions>\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography className={classes.typographyName} gutterBottom display='inline' >\r\n                        {originalName()}\r\n                        <Typography className={classes.typographyDate} variant=\"body2\" color=\"textSecondary\">\r\n                            {' (' + releaseDate() + ')'}\r\n                        </Typography>\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default MovieCard\r\n\r\n","const SAVE_FILM = 'SAVE_FILM'\r\nconst REMOVE_FILM = 'REMOVE_FILM'\r\n\r\nconst checkingLocalStorage = () => {\r\n    let favoriteFilms = []\r\n    let keys = Object.keys(localStorage);\r\n    for (let key of keys) {\r\n        favoriteFilms.push(JSON.parse(localStorage.getItem(key)))\r\n    }\r\n    return favoriteFilms\r\n}\r\n\r\nlet initialState = {\r\n    favoriteFilms: checkingLocalStorage(),\r\n};\r\n\r\nconst favoriteReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SAVE_FILM:\r\n            return {\r\n                ...state,\r\n                favoriteFilms: state.favoriteFilms.concat(action.filmData)\r\n            }\r\n        case REMOVE_FILM:\r\n            return {\r\n                ...state,\r\n                favoriteFilms: action.filteredFilms\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const toFavouritesAC = (filmData) => {\r\n    const filmId = JSON.stringify(filmData.id)\r\n    const serializedFilm = JSON.stringify(filmData)\r\n    localStorage.setItem(filmId, serializedFilm)\r\n    return { type: SAVE_FILM, filmData }\r\n}\r\n\r\nexport const removeFavouritesAC = (filmData) => {\r\n    localStorage.removeItem(filmData.id)\r\n    const filteredFilms = checkingLocalStorage()\r\n    return { type: REMOVE_FILM, filteredFilms }\r\n}\r\nexport default favoriteReducers\r\n","import React from 'react';\r\nimport MovieCard from './MovieCard';\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { toFavouritesAC, removeFavouritesAC } from '../../redux/favoriteReducers';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        justifyContent: 'center'\r\n\r\n    },\r\n}));\r\n\r\nfunction CardArea(props) {\r\n\r\n    const { toFavourites, removeFavourites } = props\r\n\r\n    const classes = useStyles();\r\n\r\n    const pageNumber = props.pageNumber + 1\r\n\r\n    const fetchMoreData = () => {\r\n        props.moreFilms(pageNumber)\r\n    };\r\n\r\n    const isFavorite = (filmsData, film) => {\r\n        return filmsData.includes(film)\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <InfiniteScroll\r\n                style={{display: \"grid\"}}\r\n                dataLength={props.films.length}\r\n                next={fetchMoreData}\r\n                hasMore={true}\r\n                loader={<h4></h4>}\r\n                >\r\n                <Grid container className={classes.root}>\r\n                    <Grid item xs={13}>\r\n                        <Grid container justify=\"center\" spacing={2}>\r\n                            {props.films.map((data) => (\r\n                                <Grid key={data.id} item className={classes.movieCard}>\r\n                                    <MovieCard\r\n                                        data={data}\r\n                                        id={data.id}\r\n                                        original_title={data.original_title}\r\n                                        poster_path={data.poster_path}\r\n                                        vote_average={data.vote_average}\r\n                                        release_date={data.release_date}\r\n                                        toFavourites={toFavourites}\r\n                                        removeFavourites={removeFavourites}\r\n                                        isFavorite={isFavorite(props.favoriteFilms, data.id)}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </InfiniteScroll>\r\n        </div >\r\n    );\r\n}\r\n// сделать чистую функцию-------------------------------------------------------------------------------\r\nconst mapStateToProps = state => ({\r\n    favoriteFilms: state.favorite.favoriteFilms.map((data) => data.id)\r\n})\r\n\r\nexport default connect(mapStateToProps, { toFavourites: toFavouritesAC, removeFavourites: removeFavouritesAC })(CardArea)","import React from 'react';\r\nimport CardArea from '../CardComponents/CardArea';\r\n\r\nexport default function Newest(props) {\r\n\r\n    return (\r\n        <CardArea\r\n            films={props.newFilms}\r\n            moreFilms={props.moreNewFilms}\r\n            pathname={props.pathname}\r\n            pageNumber={props.pageNumber}\r\n        />\r\n    );\r\n}\r\n","\r\nconst GET_NEWEST_FILMS = 'GET_NEWEST_FILMS';\r\n\r\nlet initialState = {\r\n    newFilms: [],\r\n    pageNumber: -1\r\n};\r\n\r\nexport const newestReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case GET_NEWEST_FILMS:\r\n            return {\r\n                ...state,\r\n                newFilms: state.newFilms.concat(...action.newFilmsData.results),\r\n                pageNumber: action.newFilmsData.page\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const newFilmsAC = (newFilmsData) => {\r\n    return { type: GET_NEWEST_FILMS, newFilmsData }\r\n}\r\n\r\nexport default newestReducers\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create(\r\n    {\r\n        withCredentials: false,\r\n        baseURL: 'https://api.themoviedb.org/',\r\n    }\r\n)\r\n\r\nconst api = 'api_key=1af88f747dd420376237f5999ac921cc'\r\n\r\nexport const usersAPI = {\r\n    getMovie(id) {\r\n        return instance.get(`3/movie/${id}?${api}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    getNewest(page) {\r\n        return instance.get(`3/movie/upcoming?${api}&language=en-US&page=${page}`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    },\r\n    getTopRated(page) {\r\n        return instance.get(`3/movie/top_rated?${api}&language=en-US&page=${page}&region=RU`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    },\r\n    getPopular(page) {\r\n        return instance.get(`3/movie/popular?${api}&language=en-US&page=${page}&region=RU`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    },\r\n    getSearch(query) {\r\n        return instance.get(`3/search/movie?${api}&language=en-US&query=${query}&page=1`)\r\n    },\r\n    getImages(id) {\r\n        return instance.get(`3/movie/${id}/images?${api}&language=en-US&include_image_language=include_image_language%3Den%2Cnull`)\r\n            .then(response => {\r\n                return response.data.backdrops;\r\n            })\r\n    },\r\n    getCast(id) {\r\n        return instance.get(`3/movie/${id}/credits?${api}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Newest from './Newest';\r\nimport { connect } from 'react-redux';\r\nimport { newFilmsAC } from '../../redux/newestReducers';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass NewestContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        usersAPI.getNewest(1).then(response => {\r\n            this.props.newFilmsAC(response.data);\r\n        });\r\n    }\r\n\r\n    moreNewFilms = (number) => {\r\n        usersAPI.getNewest(number).then(response => {\r\n            this.props.newFilmsAC(response.data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Newest\r\n                newFilms={this.props.newFilms}\r\n                moreNewFilms={this.moreNewFilms}\r\n                pathname={this.props.location.pathname}\r\n                pageNumber={this.props.pageNumber}\r\n            />\r\n        </>\r\n    } \r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    newFilms: state.newest.newFilms,\r\n    pageNumber: state.newest.pageNumber,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { newFilmsAC }),\r\n    withRouter\r\n)(NewestContainer)","import React from 'react';\r\nimport CardArea from '../CardComponents/CardArea';\r\n\r\n\r\n\r\nexport default function TopRated(props) {\r\n\r\n    return (\r\n        <CardArea\r\n            films={props.topFilms}\r\n            moreFilms={props.moreTopFilms}\r\n            pathname={props.pathname}\r\n            pageNumber={props.pageNumber}\r\n        />\r\n    );\r\n}\r\n","\r\nconst GET_TOP_FILMS = 'GET_TOP_FILMS';\r\n\r\nlet initialState = {\r\n    topFilms: [],\r\n    pageNumber: -1\r\n};\r\n\r\nconst topRatedReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case GET_TOP_FILMS:\r\n            return {\r\n                ...state,\r\n                topFilms: state.topFilms.concat(...action.topFilmsData.results),\r\n                pageNumber: action.topFilmsData.page\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const topFilmsAC = (topFilmsData) => {\r\n    return { type: GET_TOP_FILMS, topFilmsData }\r\n}\r\n\r\nexport default topRatedReducers\r\n","import React from 'react';\r\nimport TopRated from './TopRated';\r\nimport { connect } from 'react-redux';\r\nimport { topFilmsAC } from '../../redux/topRatedReducers';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass TopRatedContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        usersAPI.getTopRated(1).then(response => {\r\n            this.props.topFilmsAC(response.data);\r\n        });\r\n    }\r\n\r\n    moreTopFilms = (number) => {\r\n        usersAPI.getTopRated(number).then(response => {\r\n            this.props.topFilmsAC(response.data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <TopRated\r\n                topFilms={this.props.topFilms}\r\n                moreTopFilms={this.moreTopFilms}\r\n                pathname={this.props.location.pathname}\r\n                pageNumber={this.props.pageNumber}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    topFilms: state.top.topFilms,\r\n    pageNumber: state.top.pageNumber,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { topFilmsAC }),\r\n    withRouter\r\n)(TopRatedContainer)\r\n","\r\nconst GET_FILM_DETAL = 'GET_FILM_DETAL';\r\nconst GET_FILM_IMAGES = 'GET_FILM_IMAGES';\r\nconst GET_CAST = 'GET_CAST';\r\n\r\nlet initialState = {\r\n    filmDetail: {\r\n        \"adult\": false,\r\n        \"backdrop_path\": \"\",\r\n        \"belongs_to_collection\": null,\r\n        \"budget\": \"\",\r\n        \"genres\": [\r\n            {\r\n                \"id\": \"\",\r\n                \"name\": \"\",\r\n            },\r\n        ],\r\n        \"homepage\": \"\",\r\n        \"id\": \"\",\r\n        \"imdb_id\": \"\",\r\n        \"original_language\": \"\",\r\n        \"original_title\": \"\",\r\n        \"overview\": \"\",\r\n        \"popularity\": \"\",\r\n        \"poster_path\": \"\",\r\n        \"production_companies\": [\r\n            {\r\n                \"id\": \"\",\r\n                \"logo_path\": \"\",\r\n                \"name\": \"\",\r\n                \"origin_country\": \"\",\r\n            }\r\n        ],\r\n        \"production_countries\": [\r\n            {\r\n                \"iso_3166_1\": \"\",\r\n                \"name\": \"\",\r\n            }\r\n        ],\r\n        \"release_date\": \"\",\r\n        \"revenue\": \"\",\r\n        \"runtime\": \"\",\r\n        \"spoken_languages\": [\r\n            {\r\n                \"iso_639_1\": \"\",\r\n                \"name\": \"\",\r\n            }\r\n        ],\r\n        \"status\": \"\",\r\n        \"tagline\": \"\",\r\n        \"title\": \"\",\r\n        \"video\": false,\r\n        \"vote_average\": \"\",\r\n        \"vote_count\": \"\",\r\n    },\r\n    backdrops: [{\r\n        '':''\r\n    }\r\n    ],\r\n    castData: [],\r\n    crueData: []\r\n}\r\n\r\nexport const filmPageReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case GET_FILM_DETAL:\r\n            return {\r\n                ...state,\r\n                filmDetail: action.FilmDetal\r\n            }\r\n        case GET_FILM_IMAGES:\r\n            return {\r\n                ...state,\r\n                backdrops: action.FilmImages\r\n            }\r\n        case GET_CAST:\r\n            return {\r\n                ...state,\r\n                castData: action.FilmCast.cast,\r\n                crueData: action.FilmCast.crew\r\n            }\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport const newFilmDetalAC = (FilmDetal) => {\r\n    return { type: GET_FILM_DETAL, FilmDetal }\r\n}\r\nexport const newFilmImagesAC = (FilmImages) => {\r\n    return { type: GET_FILM_IMAGES, FilmImages }\r\n}\r\nexport const newCastAC = (FilmCast) => {\r\n    return { type: GET_CAST, FilmCast }\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport { GridList, GridListTileBar, GridListTile, CardMedia, CardContent, Backdrop } from '@material-ui/core';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  paper2: {\r\n    padding: theme.spacing(2),\r\n    marginTop: 5,\r\n    maxWidth: 800,\r\n    margin: 'auto',\r\n  },\r\n  paperFullSize: {\r\n    maxWidth: 1000,\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n  },\r\n  fullSizeImg: {\r\n    maxWidth: 975,\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n  },\r\n  paperCast: {\r\n    padding: theme.spacing(2),\r\n    width: 80,\r\n    height: 165\r\n  },\r\n  gridOverview: {\r\n    padding: theme.spacing(2),\r\n    minHeight: 205\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '90%',\r\n    maxHeight: '100%',\r\n  },\r\n  slider: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  cardContent: {\r\n    padding: 6\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  tabsBlock: {\r\n    marginTop: 10\r\n  }\r\n}));\r\n\r\n\r\nexport default function FilmPage(props) {\r\n\r\n  const classes = useStyles();\r\n  const filmGenres = props.film.genres.map((g) => (g.name + '  '))\r\n\r\n  // tabs\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  //  fullPhotos\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n\r\n  };\r\n  const [picUrl, setfullSizePic] = React.useState('');\r\n\r\n  const handleToggle = (e) => {\r\n    setfullSizePic(e.target.alt)\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container spacing={2} direction=\"row\">\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt=\"complex\" src={\"https://image.tmdb.org/t/p/w600_and_h900_bestv2/\" + props.film.poster_path} />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\">\r\n                  {props.film.original_title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  {props.film.tagline}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Жанр: {filmGenres}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Рейтинг: {props.film.vote_average}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Дата выхода: {props.film.release_date}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/*--------------------------------------------------------- tabs--------------------------------------------------------- */}\r\n        <div className={classes.tabsBlock} >\r\n          <AppBar elevation={0} position=\"static\" color=\"default\" className={classes.tabs}>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              textColor=\"default\"\r\n              variant=\"fullWidth\"\r\n            >\r\n              <Tab label=\"Cast\" {...a11yProps(0)} />\r\n              <Tab label=\"Photos\" {...a11yProps(1)} />\r\n              <Tab label=\"Overview\" {...a11yProps(2)} />\r\n            </Tabs>\r\n          </AppBar>\r\n        </div>\r\n      </Paper>\r\n      <Paper className={classes.paper2}>\r\n        <div className={classes.tabsBar}>\r\n          <SwipeableViews\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={value}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n            {/* ---------------------------------------------------------actors--------------------------------------------------------- */}\r\n            <TabPanel value={value} index={0} dir={theme.direction}>\r\n              <Grid container className={classes.actorsGrid}>\r\n                <Grid container justify=\"center\" spacing={1} >\r\n                  {props.cast.map((data) => (\r\n                    <Grid key={value} item >\r\n                      <Paper className={classes.paperCast} >\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          alt={data.name}\r\n                          title={data.name}\r\n                          src={!data ? '' :\r\n                            !\"https://image.tmdb.org/t/p/w138_and_h175_face/\" + data.profile_path ? \"https://image.tmdb.org/t/p/w138_and_h175_face/\" + data.profile_path : 'https://m.media-amazon.com/images/G/01/IMDbPro/images/default_name._V142442227_UY289_CR46,0,196,250_.png'}\r\n                        />\r\n                        <CardContent className={classes.cardContent}>\r\n                          <Typography gutterBottom variant=\"subtitle2\">\r\n                            {data.name}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Paper>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} dir={theme.direction}>\r\n              {/*--------------------------------------------------------- slider--------------------------------------------------------- */}\r\n              <div className={classes.slider}>\r\n                <GridList className={classes.gridList} cols={2.5}>\r\n                  {props.images.map((tile) => (\r\n                    <GridListTile key={tile.file_path}>\r\n                      <img\r\n                        src={'https://image.tmdb.org/t/p/w500_and_h282_face' + tile.file_path}\r\n                        alt={tile.file_path}\r\n                        onClick={handleToggle} />\r\n                      <GridListTileBar\r\n                        classes={{\r\n                          root: classes.titleBar,\r\n                          title: classes.title,\r\n                        }}\r\n                      />\r\n                    </GridListTile>\r\n                  ))}\r\n                </GridList>\r\n              </div>\r\n            </TabPanel>\r\n            {/*--------------------------------------------------------- overview--------------------------------------------------------- */}\r\n            <TabPanel value={value} index={2} dir={theme.direction}>\r\n              <Grid container className={classes.actorsGrid}>\r\n                <Grid container justify=\"center\" spacing={1} className={classes.gridOverview} >\r\n                  <Grid item xs>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      {props.film.overview}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      <b>Directed By:</b> {(!props.crue[1] ? '' : props.crue.map(data => { if (data.job === 'Director') { return data.name } }))}\r\n                    </Typography>\r\n                    {}\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      <b> Written By:</b> {(!props.crue[0] ? '' : props.crue.map(data => { if (data.job === 'Screenplay') { return (data.name + ' ') } }))}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      Runtime:  {( props.film.runtime) + ' minutes'}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      Budget:  {(props.film.budget) + '$'}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      Producer country:  {(!props.film.production_countries[0] ? '' : props.film.production_countries.map(data => { return data.name + ' ' }))}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </TabPanel>\r\n          </SwipeableViews>\r\n        </div>\r\n      </Paper >\r\n      {/*--------------------------------------------------------- fullSize pic--------------------------------------------------------- */}\r\n      <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n        <Paper className={classes.paperFullSize}>\r\n          <img\r\n            className={classes.fullSizeImg}\r\n            src={'https://image.tmdb.org/t/p/original/' + picUrl}\r\n            onClick={handleClose} />\r\n        </Paper>\r\n      </Backdrop>\r\n    </div >\r\n  );\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value != index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { newFilmDetalAC } from '../../redux/filmPageReducers';\r\nimport { newFilmImagesAC } from '../../redux/filmPageReducers';\r\nimport { newCastAC } from '../../redux/filmPageReducers';\r\nimport { usersAPI } from '../../api/api';\r\nimport FilmPage from './FilmPage';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass FilmPageContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        usersAPI.getMovie(this.props.match.params.filmId).then(response => {\r\n            this.props.newFilmDetalAC(response);\r\n        });\r\n        usersAPI.getImages(this.props.match.params.filmId).then(response => {\r\n            this.props.newFilmImagesAC(response);\r\n        });\r\n        usersAPI.getCast(this.props.match.params.filmId).then(response => {\r\n            response.cast.splice(6)\r\n            this.props.newCastAC(response);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <FilmPage\r\n                {...this.props}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    film: state.film.filmDetail,\r\n    images: state.film.backdrops,\r\n    cast: state.film.castData,\r\n    crue: state.film.crueData,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { newFilmDetalAC, newFilmImagesAC, newCastAC }),\r\n    withRouter\r\n)(FilmPageContainer);\r\n\r\n","import { usersAPI } from \"../api/api\";\r\n\r\nconst GET_SEARCH_FILMS = 'GET_SEARCH_FILMS';\r\n\r\nlet initialState = {\r\n    results: [null]\r\n}\r\n\r\nexport const searchReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case GET_SEARCH_FILMS:\r\n            return {\r\n                ...state,\r\n                results: action.searchData\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const searchAC = (searchData) => {\r\n    return { type: GET_SEARCH_FILMS, searchData }\r\n}\r\n\r\n\r\nexport const searchMoviesThunkCreator = (query = '') => {\r\n    return (dispatch) => {\r\n        usersAPI.getSearch(query).then(response => {\r\n            response.data.results.splice(6, 14)\r\n            dispatch(searchAC(response.data.results));\r\n        });\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { InputBase, fade, makeStyles } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { StyledLinkDark } from '../../style/Styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    list: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: 0\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    toolbar: {\r\n        backgroundColor: '#2d3436'\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        }\r\n    },\r\n}));\r\n\r\nexport default function SearchBar(props) {\r\n\r\n    document.addEventListener('click', function (e) {\r\n        if (e.target.id != 'simple-popper') {\r\n            setAnchorEl(false);\r\n            clearField()\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(false);\r\n\r\n    const clearField = () => {\r\n        document.getElementById('inputField').value = ''\r\n    }\r\n\r\n    const requestData = (e) => {\r\n        requestQuery(e)\r\n        setAnchorEl(true)\r\n    }\r\n\r\n    const requestQuery = (e) => props.getQuery(e)\r\n\r\n    const handleClick = () => {\r\n        setAnchorEl(false);\r\n        clearField()\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popper' : undefined;\r\n\r\n\r\n    return (\r\n        <div id={'search'} className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n                id={'inputField'}\r\n                onChange={requestData}\r\n                placeholder=\"Search movie\"\r\n                classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n            {/* выпадающий список */}\r\n            <div >\r\n                <Popper id={id} open={open} anchorEl={document.getElementById('search')} onClick={handleClick}>\r\n                    {props.results.map(film =>\r\n                        <StyledLinkDark to={{ pathname: '/FilmPage/' + (!film ? '' : film.id) }}>\r\n                            <List className={classes.list}>\r\n                                <ListItem className='searchItem' alignItems=\"flex-start\">\r\n                                    <ListItemAvatar>\r\n                                        <Avatar\r\n                                            variant=\"square\"\r\n                                            className={classes.avatar}\r\n                                            alt={!film ? '' : film.original_title}\r\n                                            src={\"https://image.tmdb.org/t/p/w58_and_h87_face\" + (!film ? '' : film.poster_path)}\r\n                                        />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        className={classes.list}\r\n                                        primary={!film ? '' : film.original_title}\r\n                                        secondary={\r\n                                            <React.Fragment>\r\n                                                <Typography\r\n                                                    component=\"span\"\r\n                                                    variant=\"body2\"\r\n                                                    className={classes.inline}\r\n                                                    color=\"textPrimary\"\r\n                                                >\r\n                                                    Release:\r\n                                                     </Typography>\r\n                                                {!film ? '' : (' ' + (!film.release_date ? 'None' : film.release_date.slice(0, 4)))}\r\n                                            </React.Fragment>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider variant=\"inset\" component=\"li\" />\r\n                            </List>\r\n                        </StyledLinkDark >\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Button, Toolbar, fade, makeStyles, Grid, AppBar } from '@material-ui/core';\r\nimport { StyledLinkLight } from '../../style/Styles';\r\nimport SearchBar from './Searchbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar: {\r\n    backgroundColor: '#2d3436',\r\n  },\r\n}));\r\n\r\nfunction Navbar(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Grid className='adaptiveGrid'>\r\n            <SearchBar\r\n              getQuery={props.getQuery}\r\n              results={props.results}\r\n            />\r\n            <Grid className='navButton'>\r\n              <StyledLinkLight to={'/topRated'} >\r\n                <Button color=\"inherit\" >Top rated</Button>\r\n              </StyledLinkLight>\r\n              <StyledLinkLight to={'/newest'} >\r\n                <Button color=\"inherit\" >Newest</Button>\r\n              </StyledLinkLight>\r\n              <StyledLinkLight to={'/popular'} >\r\n                <Button color=\"inherit\" >Popular</Button>\r\n              </StyledLinkLight>\r\n              <StyledLinkLight to={'/favorite'}>\r\n                <Button color=\"inherit\">Favorite</Button>\r\n              </StyledLinkLight>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchMoviesThunkCreator } from '../../redux/searchBarReducers';\r\nimport Navbar from './Navbar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass NavbarContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.searchMovies()\r\n    }\r\n\r\n    getQuery = (e) => {\r\n        const value = e.target.value.toLowerCase()\r\n        this.props.searchMovies(value)\r\n    }\r\n \r\n    render() {\r\n        return <>\r\n            <Navbar\r\n                results={this.props.results}\r\n                getQuery={this.getQuery}\r\n                setFilmId={this.props.setFilmId}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    results: state.search.results,\r\n    setFilmId: state.film.filmId\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { searchMovies: searchMoviesThunkCreator }),\r\n    withRouter\r\n)(NavbarContainer);\r\n","import React from 'react';\r\nimport CardArea from '../CardComponents/CardArea';\r\n\r\nexport default function Popular(props) {\r\n\r\n    return (\r\n        <CardArea\r\n            films={props.popularFilms}\r\n            moreFilms={props.morePopularFilms}\r\n            pathname={props.pathname}\r\n            pageNumber={props.pageNumber}\r\n        />\r\n    );\r\n}\r\n","\r\nconst GET_POPULAR_FILMS = 'GET_POPULAR_FILMS';\r\n\r\nlet initialState = {\r\n    popularFilms: [],\r\n    pageNumber: -1\r\n};\r\n\r\nconst popularReducers = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case GET_POPULAR_FILMS:\r\n            return {\r\n                ...state,\r\n                popularFilms: state.popularFilms.concat(...action.popularFilmsData.results),\r\n                pageNumber: action.popularFilmsData.page\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const popularFilmsAC = (popularFilmsData) => {\r\n    return { type: GET_POPULAR_FILMS, popularFilmsData }\r\n}\r\n\r\nexport default popularReducers\r\n","import React from 'react';\r\nimport Popular from './Popular';\r\nimport { connect } from 'react-redux';\r\nimport { popularFilmsAC } from '../../redux/popularReducers';\r\nimport { usersAPI } from '../../api/api';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass PopularContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        usersAPI.getPopular(1).then(response => {\r\n            this.props.popularFilmsAC(response.data);\r\n        });\r\n    }\r\n\r\n    morePopularFilms = (number) => {\r\n        usersAPI.getPopular(number).then(response => {\r\n            this.props.popularFilmsAC(response.data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Popular\r\n                popularFilms={this.props. popularFilms}\r\n                morePopularFilms={this.morePopularFilms}\r\n                pathname={this.props.location.pathname}\r\n                pageNumber={this.props.pageNumber}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    popularFilms: state.popular.popularFilms,\r\n    pageNumber: state.popular.pageNumber,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { popularFilmsAC }),\r\n    withRouter\r\n)(PopularContainer)","import React from 'react';\r\nimport CardArea from '../CardComponents/CardArea';\r\n\r\nexport default function Favorite(props) {\r\n\r\n    return (\r\n        <CardArea\r\n            films={props.favoriteFilms}\r\n            moreFilms={() => console.log('no more favorite films!')}\r\n            pathname={props.pathname}\r\n            pageNumber={'0'}\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Favorite from './Favorite';\r\nimport { connect } from 'react-redux';\r\n\r\nclass FavoriteContainer extends React.Component {\r\n\r\n    render() {\r\n\r\n        return <>\r\n            <Favorite\r\n                favoriteFilms={Object.values(this.props.favoriteFilms)}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    favoriteFilms: state.favorite.favoriteFilms,\r\n})\r\n\r\nexport default connect(mapStateToProps)(FavoriteContainer)\r\n","import React from 'react';\nimport './App.css';\nimport 'typeface-roboto';\nimport { Container } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport NewestContainer from './components/Newest/NewestContainer';\nimport TopRatedContainer from './components/TopRated/TopRatedContainer';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport FilmPageContainer from './components/FilmPage/FilmPageContainer';\nimport NavbarContainer from './components/Navbar/NavbarContainer';\nimport PopularContainer from './components/Popular/PopularContainer';\nimport FavoriteContainer from './components/Favorite/FavoriteContainer';\n\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Container maxWidth=\"md\" style={{ padding: 0 }}>\n        <NavbarContainer />\n        <Typography component=\"div\" style={{ backgroundColor: '#dfe6e9', minHeight: '100vh', height: '100%', paddingTop: '5px' }} >\n          <Switch>\n            <Route exact path='/'\n              render={() => <TopRatedContainer />} />\n            <Route path='/newest'\n              render={() => <NewestContainer />} />\n            <Route path='/popular'\n              render={() => <PopularContainer />} />\n            <Route path='/topRated'\n              render={() => <TopRatedContainer />} />\n            <Route path='/favorite'\n              render={() => <FavoriteContainer />} />\n            <Route path='/filmPage/:filmId'\n              component={() => <FilmPageContainer />} />\n          </Switch>\n        </Typography>\n      </Container>\n    </BrowserRouter>\n  )\n}\n\nexport default App; ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport newestReducers from \"./newestReducers\";\r\nimport topRatedReducers from \"./topRatedReducers\";\r\nimport { filmPageReducers } from \"./filmPageReducers\";\r\nimport { searchReducers } from \"./searchBarReducers\";\r\nimport popularReducers from \"./popularReducers\";\r\nimport favoriteReducers from \"./favoriteReducers\";\r\n\r\n//бывший _state\r\nlet reducers = combineReducers({\r\n    newest: newestReducers,\r\n    top: topRatedReducers,\r\n    film: filmPageReducers,\r\n    search: searchReducers,\r\n    popular: popularReducers,\r\n    favorite: favoriteReducers\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}